import math

def reward_function(params):
    '''
    Example of rewarding the car for speed and penalizing for leaving the track
    '''

    # Read input parameters
    distance_from_center = params['distance_from_center']
    track_width = params['track_width']
    abs_steering = abs(params['steering_angle']) # Only need the absolute steering angle
    speed = params['speed']
    all_wheels_on_track = params['all_wheels_on_track']
    waypoints = params['waypoints']
    closest_waypoints = params['closest_waypoints']
    heading = params['heading']
    progress = params['progress']
    is_offtrack = params["is_offtrack"]

    # Calculate the direction of the center line based on the closest waypoints
    next_point = waypoints[closest_waypoints[1]]
    prev_point = waypoints[closest_waypoints[0]]

    # Calculate the direction in radius, arctan2(dy, dx), the result is (-pi, pi) in radians
    track_direction = math.atan2(next_point[1] - prev_point[1], next_point[0] - prev_point[0])
    # Convert to degree
    track_direction = math.degrees(track_direction)

    # Calculate the difference between the track direction and the heading direction of the car
    direction_diff = abs(track_direction - heading)
    if direction_diff > 180:
        direction_diff = 360 - direction_diff

# Calculate 4 markers that are at varying distances away from the center line
    marker_1 = 0.09 * track_width
    marker_2 = 0.18 * track_width
    marker_3 = 0.27 * track_width
    marker_4 = 0.36 * track_width
    marker_5 = 0.43 * track_width
    # Reward for staying close to the center line
    if distance_from_center == 0:
        reward = 2.5
    elif distance_from_center <= marker_1:
        reward = 2.0
    elif distance_from_center <= marker_2:
        reward = 1.5
    elif distance_from_center <= marker_3:
        reward = 1.0
    elif distance_from_center <= marker_4:
        reward = 0.5
    elif distance_from_center <= marker_5:
        reward = -0.5
    else:
        reward = -1.0

        # likely crashed/ close to off track
    # Penalize if car steer too much to prevent zigzag
    ABS_STEERING_THRESHOLD = 25.0               #need to analyse the value
    if abs_steering > ABS_STEERING_THRESHOLD:
        reward *= 0.8

    #reward for staying in center lane,Penalize the reward if the difference is too large 
    if direction_diff <= 10.0:
        reward += 1.0  
    else:
        reward -= 1.0

    #reward for progress
    if all_wheels_on_track:
        reward += progress/100
    elif not all_wheels_on_track or is_offtrack:    # Penalize for going off track
        reward -= 1.0
    

    #reward for steering angles
    if abs_steering <= 10 and 1.2 <= speed <= 1.66:
        reward += 1.0
    elif abs_steering > 10 and 0.66 <= speed < 1.2:
        reward += 1.0
    else:
        reward -= 1.0
        
    return float(reward)
